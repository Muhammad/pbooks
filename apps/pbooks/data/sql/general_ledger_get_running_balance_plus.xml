<!--
Program: PBooks
Component: general_ledger_get_all.xml
Copyright: Savonix Corporation
Author: Albert L. Lash, IV
License: Gnu Affero Public License version 3
http://www.gnu.org/licenses

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation; either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program; if not, see http://www.gnu.org/licenses
or write to the Free Software Foundation, Inc., 51 Franklin Street,
Fifth Floor, Boston, MA 02110-1301 USA
-->
<!DOCTYPE query SYSTEM "__default_table_names__.txt">
<query name="get_all_transactions">
	<connection>&pb_connection_read;</connection>
	<params>
		<param name="_get/account_id" type="text" default="%"/>
		<param name="runtime/from_date" type="text" />
		<param name="runtime/to_date" type="text" />
		<param name="//option_get_company_name/fiscal_period_id" type="text" default="%"/>
	</params>
	<sql>
  <!-- First thing you need to do is get the same functionality without 
  using SUM in initial select -->
  
  <!-- This query is supposed to do the same thing as the regular version,
  but include a cell containing the corresponding account names separated by commas -->
  
  SELECT &pb_general_ledger;.transaction_id,
  &pb_general_ledger;.entry_amount,
  &pb_general_ledger;.account_id,
  &pb_general_ledger;.entry_id,
  &pb_general_ledger;.entry_amount_id AS entry_amount_id,
  &pb_general_ledger;.entry_datetime,
  &pb_general_ledger;.memorandum,
  &pb_accounts;.name

  FROM &pb_accounts;,&pb_general_ledger;

  LEFT OUTER JOIN (
    SELECT &pb_entry_amounts;.entry_amount_id FROM &pb_entry_amounts;,&pb_general_ledger;
    WHERE &pb_entry_amounts;.entry_amount_id = 4
    AND &pb_entry_amounts;.entry_amount_id = &pb_general_ledger;.entry_amount_id
    )
  AS bb
  ON bb.entry_amount_id = &pb_general_ledger;.entry_amount_id

  WHERE

  &pb_general_ledger;.account_id = ?

  AND &pb_general_ledger;.account_id=&pb_accounts;.id


  AND &pb_general_ledger;.entry_datetime &gt;= ?
  AND &pb_general_ledger;.entry_datetime &lt;= ?
  AND &pb_general_ledger;.fiscal_period_id LIKE ?

  GROUP BY  &pb_general_ledger;.transaction_id
	</sql>
</query>

<!--
Program: PBooks
Component: accounts_get_all.xml
Copyright: Savonix Corporation
Author: Albert L. Lash, IV
License: Gnu Affero Public License version 3
http://www.gnu.org/licenses

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation; either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program; if not, see http://www.gnu.org/licenses
or write to the Free Software Foundation,Inc., 51 Franklin Street,
Fifth Floor, Boston, MA 02110-1301  USA
-->
<!DOCTYPE query SYSTEM "__default_table_names__.txt">
<query name="get_all_accounts">
    <connection>&pb_connection;</connection>
    <params>
		<param name="_get/account_type_id" type="text" default="%"/>
        <param name="show_all_accounts" type="text" default="off"/> 
	</params>
    <sql>        
        SELECT 
        &pb_accounts;.id,
        &pb_accounts;.name,
        &pb_accounts;.description,
        &pb_accounts;.account_type_id,
        &pb_accounts;.account_number,
        &pb_accounts;.hide,
        &pb_general_ledger;.account_id,
        CASE WHEN &pb_accounts_meta;.meta_key='has_checks' THEN &pb_accounts_meta;.meta_value END as has_checks,
        SUM(&pb_general_ledger;.entry_amount) as running_balance,
        mymeta.meta_value as takes_deposits,
        mymeta2.meta_value as cash_account,
        mymeta3.meta_value as accounts_receivable_account
        
        FROM &pb_accounts;
        
        LEFT JOIN &pb_general_ledger;
        ON &pb_accounts;.id = &pb_general_ledger;.account_id
        
        LEFT JOIN &pb_accounts_meta;
        ON &pb_accounts;.id = &pb_accounts_meta;.account_id
        AND &pb_accounts_meta;.meta_key='has_checks'
        
        LEFT JOIN &pb_accounts_meta; AS mymeta
        ON (mymeta.account_id = &pb_accounts;.id
        AND mymeta.meta_key='takes_deposits')
        
        LEFT JOIN &pb_accounts_meta; AS mymeta2
        ON mymeta2.account_id = &pb_accounts;.id
        AND mymeta2.meta_key='cash_account'
        
        LEFT JOIN &pb_accounts_meta; AS mymeta3
        ON mymeta3.account_id = &pb_accounts;.id
        AND mymeta3.meta_key='accounts_receivable_account'
        
        WHERE &pb_accounts;.account_type_id LIKE ? 
        
        AND &pb_accounts;.account_type_id &gt; 0
        AND (&pb_accounts;.hide != 'on' OR &pb_accounts;.hide IS NULL OR ?='on')
        AND &pb_accounts;.id &gt; 0
        GROUP BY &pb_accounts;.id
        ORDER BY &pb_accounts;.account_number
    </sql>
</query>